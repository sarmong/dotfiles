# Basic vars
set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml:!.config:!.local"
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'

# cmds/functions
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*|application/json|inode/x-empty) $EDITOR $fx;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*) xdg-open $f ;;

  # @TODO review this
  # rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" |
		# setsid -f sxiv -aio 2>/dev/null | while read -r file; do
			# [ -z "$file" ] && continue
			# lf -remote "send select \"$file\""
			# lf -remote "send toggle"
		# done &
    # ;;
	audio/*) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	application/pgp-encrypted) $EDITOR $fx ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && aunpack $fx
}}

# cmd delete ${{
# 	clear; tput cup $(($(tput lines)/3)); tput bold
# 	set -f
# 	printf "%s\n\t" "$fx"
# 	printf "delete?[y/N]"
# 	read ans
# 	[ $ans = "y" ] && rm -rf -- $fx
# }}

# cmd delete %rm -ri $fx

# cmd trash %mv -bi $fx ~/docs/air/.Trash

cmd trash %trash $fx

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Move to where?"
	dest="$(fd . ~ /run/media/$USER --type d | sed "s|/home/$USER|[home]|" | sed "s|/run/media/$USER|[drives]|" | fzf | sed "s|\[home\]|/home/$USER|" | sed 's|\[drives\]|/run/media/$USER|')" &&
	for x in $fx; do
		eval mv -iv \"$x\" \"$dest\"
	done &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Copy to where?"
	dest="$(fd . /home/michael /run/media/michael/transcend2 --type d | sed 's|/home/michael|[home]|' | sed 's|/run/media/michael/transcend2|[transcend]|' | fzf | sed 's|\[home\]|/home/michael|' | sed 's|\[transcend\]|/run/media/michael/transcend2|')" &&
	for x in $fx; do
		eval cp -ivr \"$x\" \"$dest\"
	done &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd setbg "$1"
cmd bulkrename $vidir

# Bindings
map <c-f> $lf -remote "send $id select '$(fzf)'"
map J $lf -remote "send $id cd $(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf)"
map gh
map gg top
# map D delete
map T trash
map E extract
map C copyto
map M moveto
map <c-n> push :mkdir<space>
map <c-r> reload
map <c-s> set hidden!
map <enter> shell
map x $$f
map X !$f
map o $xdg-open $f
map O $mimeopen --ask $f
map gr $dragon-drop $fx & disown

map A rename # at the very end
# map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map r push A<a-b><a-b><a-f> # before extention
map a push A<a-b> # after extention
map B bulkrename
map b $setbg $f

map <c-e> down
map <c-y> up
map V push :!nvim<space>

map W $setsid -f $TERMINAL >/dev/null 2>&1

## Copy path
map Y $printf "%s" "$fx" | xclip -selection clipboard

# Source Bookmarks
# source "~/.config/lf/shortcutrc"
