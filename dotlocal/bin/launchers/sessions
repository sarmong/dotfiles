#!/usr/bin/env bash

launcher="${1:-rofi}"

work_projects=$(find "$HOME/docs/work" "$HOME/docs/tech" -mindepth 1 -maxdepth 1 -type d)
personal="$XDG_DOTFILES_DIR\n$XDG_NC_DIR/Vault"

dirs="$work_projects\n$personal"

opened_sessions=$(tmux ls -F '#{session_name}')
sorted=$(echo -e "$dirs" | rofi-frecency get "sessions")
sessions_without_dir=$(
  comm -13 <(echo "$sorted" | xargs -n 1 basename | sort) <(echo "$opened_sessions" | sort) | grep -v "nested-"
)

all=$([ -n "$sessions_without_dir" ] && echo -e "$sessions_without_dir\n$sorted" || echo -e "$sorted")

if [ "$launcher" = "fzf" ]; then
  selected=$(echo -e "$all" | fzf -d "/" --with-nth -1 --bind "ctrl-x:execute(tmux kill-session -t {})")

  if [ -z "$selected" ]; then
    exit 0
  fi
else
  selected_idx=$(echo -e "$all" | xargs -I {} -n 1 basename {} | rofi -dmenu -i -format d) ## without using {} xargs splits by spaces too
  if [ -z "$selected_idx" ] || [ "$selected_idx" -lt 1 ]; then
    exit 0
  fi

  selected=$(echo "$all" | sed -n "${selected_idx}p")
fi

rofi-frecency update "sessions" "$selected"

if [ -d "$selected/.bare" ]; then
  cd "$selected" || exit
  worktrees=$(git worktree list | sed 1d)

  if [ "$launcher" = "fzf" ]; then
    selected=$(echo "$worktrees" | awk '{print $1, $3}' | fzf -d "/" --with-nth -1 --bind "ctrl-x:execute(tmux kill-session -t {})" | awk '{print $1}')

    if [ -z "$selected" ]; then
      exit 0
    fi
  else
    selected_idx=$(echo "$worktrees" | awk '{cmd="basename \"" $1 "\""; cmd | getline col1; close(cmd); print col1, $3}' | rofi -dmenu -i -format d)

    if [ -z "$selected_idx" ]; then
      exit 0
    fi

    selected=$(echo "$worktrees" | sed -n "${selected_idx}p" | awk '{print $1}')
  fi
fi

is_tmux_cliend_focused() {
  focused_window_id=$(xdotool getactivewindow)
  window_class=$(xprop -id "$focused_window_id" WM_CLASS | awk '{print $4}')

  ## Need \"\" because window_class is surrounded with ""
  if [[ "$window_class" != "\"$TERMINAL\"" ]]; then
    return 1
  fi

  pid=$(xdotool getwindowpid "$focused_window_id")
  tmux_running=$(pstree -p "$pid" | grep "tmux")

  if [ -n "$tmux_running" ]; then
    return 0
  fi

  return 1
}

## Changes tmux session name in the form of `worktree[repo]` into `repo/worktree`
## Tightly coupled with what workplace script does
## TODO: decouple
if [[ "$selected" =~ ^([^[]+)\[([^]]+)\]$ ]]; then
  dir2="${BASH_REMATCH[1]}"
  dir1="${BASH_REMATCH[2]}"
  selected="$XDG_DOCUMENTS_DIR/work/$dir1/$dir2"
fi

if [ -n "$TMUX" ] || is_tmux_cliend_focused; then
  workplace "$selected" true
else
  "$TERMINAL" --directory "$selected" -e "$SHELL" -c "workplace ; $SHELL"
fi
