#!/usr/bin/env zsh

exists thefuck && eval "$(thefuck --alias)"

exists batcat && alias bat="batcat" # For Debian

## Package managers
alias p="sudo pacman"
a() {
  cmd="apt"
  if [ "$1" = "nala" ]; then
    cmd="nala"
    shift
  fi
  if [[ "install" == $1* ]]; then
    shift
    sudo "$cmd" install "$@"
  elif [[ "remove" == $1* ]]; then
    shift
    sudo "$cmd" remove "$@"
  elif [[ "search" == $1* ]]; then
    shift
    "$cmd" search "$@"
  elif [[ "show" == $1* ]] || [[ "info" == $1* ]]; then
    shift
    "$cmd" show "$@"
  else
    "$cmd" "$@"
  fi
}
alias n="a nala"

## Abbreviations

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

alias ka="killall"
alias g="git"
alias gs="git status"
alias gcob='git branch | fzf | xargs git checkout'
alias s="systemctl"
alias ss="sudo systemctl"
alias j="journalctl"
alias se="sudoedit"
alias lg="lazygit"

[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"

alias ls="ls -hGF --color=auto --group-directories-first"
alias la="ls -A"
alias ll="ls -Al"
alias lsd="ls -d --indicator-style='none' */"
alias grep="grep --color=auto"
alias fgrep="grep -F --color=auto"
alias egrep="grep -E --color=auto"
alias mv="mv -i"
mvto() {
  to=$(fd . ~ --type d --type symlink --follow | fzf)
  [ -z "$to" ] && return
  command mv -i "$@" "$to"
}

alias rm="rm -I"
alias t="trash"
alias c="clear"
alias mkd="mkdir -pv"
alias untar="tar -zxvf"
alias sha="shasum -a 256" # check the checksum of a file
alias diff="colordiff"
pdfman() {
  man -Tpdf "$1" | zathura -
  # man -t "$1" | ps2pdf - | zathura -
}

alias open="lfh"
alias o="lfh"
alias ow="lfh --ask"
alias xopen="xdg-open"
alias xo="xdg-open"
alias mtype="file -b --mime-type"
alias copy="xclip -sel clipboard"

inf() {
  uname -sr
  uptime | sed 's/ //'
  sensors | grep --color=never Pack
  lscpu | grep 'CPU MHz:'
  free -h | grep Mem | awk '{print "RAM: " $3+$5 " / " $2}'
}

lns() {
  target=$(readlink -f "$1")
  ln -vs "$target" "$2"
}

alias v="nvim"
nvims() {
  appname=$(find "$XDG_CONFIG_HOME/" -maxdepth 1 -name "nvim-*" -type d | fzf)

  NVIM_APPNAME="$(basename "$appname")" nvim "$@"
}
alias fo="fzf | xargs xdg-open"
alias nb="newsboat"
alias ec="pushd \$XDG_DOTFILES_DIR >/dev/null && fzf | xargs nvim && popd >/dev/null"

alias yta="yt-dlp --embed-metadata -f 'ba'" # Download audio
play() {
  umpv "$1" &
  disown
}

alias weather="curl wttr.in"
alias moon="curl wttr.in/moon"
alias myip="curl ipinfo.io/ip"
alias week='date +%V'

mcd() {
  mkdir -pv "$@" && cd "${@:$#}" || exit
}

takearchive() {
  local data thedir
  data="$(mktemp)"
  curl -L "$1" >"$data"
  tar xf "$data"
  thedir="$(tar tf "$data" | head -n 1)"
  rm -f "$data"
  cd "$thedir" || exit
}

takegit() {
  git clone "$1"
  cd "$(basename "${1%%.git}")" || exit
}

take() {
  if [[ $1 =~ ^(https?|ftp).*\.tar\.(gz|bz2|xz)$ ]]; then
    takearchive "$1"
  elif [[ $1 =~ ^([A-Za-z0-9]\+@|https?|git|ssh|ftps?|rsync).*\.git/?$ ]]; then
    takegit "$1"
  else
    mcd "$@"
  fi
}

lf() {
  [ -n "$1" ] && __zoxide_z "$1"
  tmp="$(mktemp)"
  command lf -last-dir-path="$tmp" "${@:2}"
  if [ -f "$tmp" ]; then
    dir="$(cat "$tmp")"
    rm -f "$tmp" >/dev/null
    if [ -d "$dir" ] && [ "$dir" != "$(pwd)" ]; then
      cd "$dir" || exit
    fi
  fi
}

man() {
  if type batcat &>/dev/null; then
    command="batcat"
  elif type bat &>/dev/null; then
    command="bat"
  else
    command man "$@"
    return
  fi

  state_file="${XDG_STATE_HOME:-$HOME/.local/state}/current_theme"
  current_theme=$(cat "$state_file")

  if [ "$current_theme" = "light" ]; then
    theme="gruvbox-light"
  else
    theme="gruvbox-dark"
  fi

  MANPAGER="sh -c 'col -bx | $command --theme='$theme' -l man -p'" command man "$@"
}
