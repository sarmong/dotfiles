#!/usr/bin/env zsh

function f() { echo "%F{$1}" }

# # gruvbox faded
# black=$(f 0)
# blue=$(f 24)
# cyan=$(f 66)
# green=$(f 100)
# orange=$(f 130)
# purple=$(f 96)
# red=$(f 88)
# violet=$(f 61)
# white=$(f 15)
# yellow=$(f 136)

# Solarized
black=$(f 0)
blue=$(f 33)
cyan=$(f 37)
green=$(f 64)
orange=$(f 166)
purple=$(f 125)
red=$(f 124)
violet=$(f 61)
white=$(f 15)
yellow=$(f 136)

prompt_git() {
  local s='';
  local branchName='';
  GIT_INFO=""

  # Check if the current directory is in a Git repository.
  git rev-parse --is-inside-work-tree &>/dev/null || return;

  # Check for what branch we’re on.
  # Get the short symbolic ref. If HEAD isn’t a symbolic ref, get a
  # tracking remote branch or tag. Otherwise, get the
  # short SHA for the latest commit, or give up.
  branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
    git describe --all --exact-match HEAD 2> /dev/null || \
    git rev-parse --short HEAD 2> /dev/null || \
    echo '(unknown)')";

  # Early exit for Chromium & Blink repo, as the dirty check takes too long.
  # Thanks, @paulirish!
  # https://github.com/paulirish/dotfiles/blob/dd33151f/.bash_prompt#L110-L123
  repoUrl="$(git config --get remote.origin.url)";
  if grep -q 'chromium/src.git' <<< "${repoUrl}"; then
    s+='*';
  else
    # Check for uncommitted changes in the index.
    if ! $(git diff --quiet --ignore-submodules --cached); then
      s+='+';
    fi;
    # Check for unstaged changes.
    if ! $(git diff-files --quiet --ignore-submodules --); then
      s+='!';
    fi;
    # Check for untracked files.
    if [ -n "$(git ls-files --others --exclude-standard)" ]; then
      s+='?';
    fi;
    # Check for stashed files.
    if $(git rev-parse --verify refs/stash &>/dev/null); then
      s+='$';
    fi;
  fi;

  [ -n "${s}" ] && s=" [${s}]";

  # echo -e "${1}${branchName}${2}${s}";
  GIT_INFO="%F{$white} on ${1}${branchName}${2}${s}";
}


# set VIMODE according to the current mode (default “[i]”)
insert_icon="%F{67}i"
normal_icon="%F{222}n"
VIMODE="$insert_icon"
function zle-keymap-select {
 VIMODE="${${KEYMAP/vicmd/$normal_icon}/(main|viins)/$insert_icon}"
 zle reset-prompt
}

zle -N zle-keymap-select

## Enable colors
autoload -U colors && colors

setopt prompt_subst

get_node() { NODE_V="%F{$cyan} $(node -v)" }

precmd() {
  prompt_git "%F{$violet}" "%F{$blue}"
  # get_node
}

PROMPT=""
PROMPT+=$'\n'
PROMPT+="%B"
PROMPT+="$orange%n"
PROMPT+="$white@"
PROMPT+="$yellow%M"
PROMPT+="$white in "
PROMPT+="$green%~"
PROMPT+='${NODE_V}'
PROMPT+='${GIT_INFO} '
PROMPT+=$'\n'
PROMPT+='${VIMODE} '
PROMPT+="$white$%b "
PROMPT+="%{$reset_color%}"

