set -g prefix2 C-a
bind C-a send-prefix -2

set -g base-index 1           # start windows numbering at 1
set -g pane-base-index 1      # make pane numbering consistent with windows

set -g set-titles-string '#{session_name}'
set -g set-titles on          # set terminal title
set -g renumber-windows on

set -g mouse on
set -g escape-time 0 # no delay when pressing esc in neovim
set -g history-limit 100000
set-option -g focus-events on

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000
# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5
# Emacs key bindings in tmux command prompt (prefix + :)
set -g status-keys emacs
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Hack to start line numbers with 1 instead of 0
# https://unix.stackexchange.com/a/755474
bind t choose-tree -ZsK '#{?#{e|<:#{line},9},#{e|+:1,#{line}},#{?#{e|<:#{line},35},M-#{a:#{e|+:97,#{e|-:#{line},9}}},}}'
bind w popup -E "sessions fzf"

## Copy mode commands
setw -g mode-keys vi
# bind y copy-mode # get into copy-mode TODO overriden by tmux-yank
# bind -T copy-mode-vi 'C-v' send -X rectangle-toggle \; send -X begin-selection # TODO buggy
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection

bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'

bind o switch-client -p
bind i switch-client -n

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind  C-u send -X page-up
bind  C-d send -X page-down

bind -n M-z resize-pane -Z
bind -n M-r rotate-window

# select with alt-number
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-h previous-window
bind -n M-l next-window
bind a last-window

# move windows
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
# If only one pane in a window or inside vim
# just send-keys to the running program (vim, shell, etc.)
# otherwise, select-pane only if not at the edge
bind-key -n C-h if-shell -F '#{||:#{==:#{window_panes},1},#{@pane-is-vim}}'  { send-keys C-h } { if-shell -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n C-j if-shell -F '#{||:#{==:#{window_panes},1},#{@pane-is-vim}}'  { send-keys C-j } { if-shell -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n C-k if-shell -F '#{||:#{==:#{window_panes},1},#{@pane-is-vim}}'  { send-keys C-k } { if-shell -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n C-l if-shell -F '#{||:#{==:#{window_panes},1},#{@pane-is-vim}}'  { send-keys C-l } { if-shell -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -n C-\\ if-shell -F "#{@pane-is-vim}" { send-keys C-\ } { select-pane -l }


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Smart pane resizing with awareness of Neovim splits.
bind-key -n C-Left if -F "#{@pane-is-vim}" { send-keys C-Left } { resize-pane -L 3 }
bind-key -n C-Down if -F "#{@pane-is-vim}" { send-keys C-Down } { resize-pane -D 3 }
bind-key -n C-Up if -F "#{@pane-is-vim}" { send-keys C-Up } { resize-pane -U 3 }
bind-key -n C-Right if -F "#{@pane-is-vim}" { send-keys C-Right } { resize-pane -R 3 }


# ## COLORSCHEME: gruvbox dark (medium)
# set-option -g status "on"
# # default statusbar color
# set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
# # default window title colors
# set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1
# # default window with an activity alert
# set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3
# # active window title colors
# set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1
# # pane border
# set-option -g pane-active-border-style fg=colour250 #fg2
# set-option -g pane-border-style fg=colour237 #bg1
# # message infos
# set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1
# # writing commands inactive
# set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1
# # pane number display
# set-option -g display-panes-active-colour colour250 #fg2
# set-option -g display-panes-colour colour237 #bg1
# # clock
# set-window-option -g clock-mode-colour colour109 #blue
# # bell
# set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg
# ## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
# set-option -g status-justify "left"
# set-option -g status-left-style none
# set-option -g status-left-length "80"
# set-option -g status-right-style none
# set-option -g status-right-length "80"
# set-window-option -g window-status-separator ""
#
# set-option -g status-left "#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]"
# set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]#[bg=colour239,fg=colour246] %Y-%m-%d  %H:%M #[bg=colour239,fg=colour248,nobold,noitalics,nounderscore]#[bg=colour248,fg=colour237] #h "
#
# set-window-option -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]#[bg=colour214,fg=colour239] #I #[bg=colour214,fg=colour239,bold] #W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]"
# set-window-option -g window-status-format "#[bg=colour239,fg=colour237,noitalics]#[bg=colour239,fg=colour223] #I #[bg=colour239,fg=colour223] #W #[bg=colour237,fg=colour239,noitalics]"


### theme settings ###

# window separators
set-option -wg window-status-separator ""
# monitor window changes
set-option -wg monitor-activity on
set-option -wg monitor-bell on
# set statusbar update interval
set-option -g status-interval 1
### colorscheme ###
# change window screen colors
set-option -wg mode-style bg="#FE8019",fg="#3C3836"
# default statusbar colors (terminal bg should be #282828)
set-option -g status-style bg=terminal,fg="#A89984"
# default window title colors
set-option -wg window-status-style bg="#3C3836",fg="#7C6F64"
# colors for windows with activity
set-option -wg window-status-activity-style bg="#3C3836",fg="#A89984"
# colors for windows with bells
set-option -wg window-status-bell-style bg="#3C3836",fg="#FE8019"
# active window title colors
set-option -wg window-status-current-style bg="#FE8019",fg="#3C3836"
# pane border
set-option -g pane-active-border-style fg="#FE8019"
set-option -g pane-border-style fg="#3C3836"
# message info
set-option -g message-style bg="#FE8019",fg="#3C3836"
# writing commands inactive
set-option -g message-command-style bg="#A89984",fg="#3C3836"
# pane number display
set-option -g display-panes-active-colour "#FE8019"
set-option -g display-panes-colour "#3C3836"
# clock
set-option -wg clock-mode-colour "#FE8019"
# copy mode highlighting
%if #{>=:#{version},3.2}
    set-option -wg copy-mode-match-style "bg=#A89984,fg=#3C3836"
    set-option -wg copy-mode-current-match-style "bg=#FE8019,fg=#3C3836"
%endif
# statusbar formatting
# "#fe8019" MUST be in lowercase here (conflicts with statusline alias otherwise)
set-option -g status-left "#[bg=#A89984, fg=#3C3836]#{?client_prefix,#[bg=#fe8019],#[bg=#A89984]} #{session_name} "
set-option -g status-right "#[bg=#3C3836, fg=#7C6F64] %Y-%m-%d %H:%M:%S #[bg=#A89984, fg=#3C3836]#{?client_prefix,#[bg=#fe8019],#[bg=#A89984]} #{host_short} "

set-option -wg window-status-current-format "#{?window_zoomed_flag,#[fg=default bold],#[fg=default]} #{window_index} #{window_name} "
set-option -wg window-status-format "#{?window_zoomed_flag,#[fg=default bold],#[fg=default]} #{window_index} #{window_name} "

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe'
set -g @yank_selection_mouse 'clipboard'

## prefix + tab
set -g @plugin 'laktak/extrakto'
set -g @extrakto_split_size 9
set -g @extrakto_split_direction v

## prefix + P       - toggle logging
## prefix + alt + p - save visible text
## prefix + alt + P - save complete history
set -g @plugin 'tmux-plugins/tmux-logging'

## prefix + \ #
set -g @plugin 'jaclu/tmux-menus'

set -g @plugin 'omerxx/tmux-sessionx'
set -g @sessionx-bind 'O'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

source-file ~/.config/tmux/colors/current-theme.conf
