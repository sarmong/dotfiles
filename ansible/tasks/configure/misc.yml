- name: Enable other services
  vars:
    username: "{{ ansible_env.USER }}"
  block:
    - name: set max_user_watches
      become: true
      sysctl:
        name: fs.inotify.max_user_watches
        value: "1048576"

    - name: set max_user_instances
      become: true
      sysctl:
        name: fs.inotify.max_user_instances
        value: "8192"

    - name: services | enable other services
      become: true
      systemd_service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - NetworkManager
        - bluetooth
        - "syncthing@{{ username }}"

    ## Shouldn't be started
    - name: services | betterlocksreen
      become: true
      systemd_service:
        name: "betterlockscreen@{{ username }}"
        enabled: true

    - name: services | copy ssh-agent2.serbive
      copy:
        src: ssh-agent2.service
        dest:
          "{{ ansible_env.XDG_CONFIG_HOME }}/systemd/user/ssh-agent2.service"
        mode: preserve

    - name: services | user services
      systemd_service:
        name: "{{ item }}"
        scope: user
        state: started
        enabled: true
      loop:
        - ssh-agent2

    - name: Change user shell
      become: true
      user:
        name: "{{ username }}"
        shell: /usr/bin/zsh
        groups: input
        append: true

    - name: Use dash as POSIX shell
      become: true
      file:
        src: /bin/dash
        dest: /bin/sh
        state: link

    - name: Create external drives dir
      become: true
      file:
        path: "/media/{{ username }}"
        owner: root
        group: root
        mode: "0750"
        state: directory

    - name: Link external drives dir
      file:
        src: "/media/{{ username }}"
        dest: ~/drives
        state: link

    - name: Mask portal services 
      systemd_service:
        name: "{{ item }}"
        masked: true
        scope: user
      loop:
        - xdg-desktop-portal-gtk ## causes slow startup of gtk apps
        - plasma-xdg-desktop-portal-kde ## slow startup of blueman-manager and tg

    - name: Update tldr
      command:
        cmd: tldr --update
        creates: "{{ ansible_env.XDG_CACHE_HOME }}/tealdeer"

    - name: Install node lts
      shell:
        cmd: "fnm install lts/latest && fnm default lts/latest"
        creates: "{{ ansible_env.XDG_DATA_HOME }}/fnm/aliases/default"

- name: Copy SSH config
  tags: ssh
  block:
    - name: ssh | copy config
      copy:
        src: ssh-config
        dest: ~/.ssh/config
        mode: preserve

- name: Copy cabin html
  become: true
  block:
    - name: cabin | copy files
      copy:
        src: cabin-enc/
        dest: /var/www/cabin
        mode: preserve
        owner: "{{ lookup('env', 'USER') }}"
        group: "{{ lookup('env', 'USER') }}"

- name: firefox config
  tags:
    - firefox
  block:
    - name: firefox | check if *.default-release user exists
      find:
        paths: "{{ ansible_env.HOME }}/.mozilla/firefox"
        patterns: "*.default-release"
        file_type: directory
      register: firefox_profile_check

    - name: firefox | Create default-release profile
      command: firefox --createprofile default-release
      when: firefox_profile_check.matched == 0

    - name:
        firefox | Start Firefox in headless mode with default-release profile to
        make it default
      shell: "firefox --headless -P default-release &"
      when: firefox_profile_check.matched == 0

    - name: Wait for Firefox to initialize profile
      wait_for:
        timeout: 2
      when: firefox_profile_check.matched == 0

    - name: firefox | Kill the Firefox headless process
      ignore_errors: true
      shell: "killall --wait --regexp 'firefox*'"
      changed_when: false
      when: firefox_profile_check.matched == 0

    - name: firefox | find created *.default-release dir
      find:
        paths: "{{ ansible_env.HOME }}/.mozilla/firefox"
        patterns: "*.default-release"
        file_type: directory
      register: firefox_created_dir

    - name: firefox | Create chrome dir
      file:
        path: "{{ firefox_created_dir.files[0].path }}/chrome"
        state: directory
        mode: "0755"

    - name: firefox | copy config files
      copy:
        src: "{{ item.src }}"
        dest: "{{ firefox_created_dir.files[0].path }}/{{ item.dest }}"
      with_items:
        - { src: firefox/chrome/userChrome.css, dest: chrome/userChrome.css }
        - { src: firefox/chrome/userContent.css, dest: chrome/userContent.css }
        - { src: firefox/user.js, dest: user.js }
