- name: Link dotfiles
  include_tasks: link.yml
  vars:
    local_dotfiles: "{{ lookup('env', 'XDG_DOTFILES_DIR') }}"
  loop:
    - src: "{{ local_dotfiles }}/dotconfig"
      dest: "{{ ansible_env.XDG_CONFIG_HOME }}"
    - src: "{{ local_dotfiles }}/dotlocal/share/applications"
      dest: "{{ ansible_env.XDG_DATA_HOME }}/applications"
    - src: "{{ local_dotfiles }}/dotlocal/xdg/icons"
      dest: "{{ ansible_env.HOME }}/.local/xdg/icons"
    - src: "{{ local_dotfiles }}/dotlocal/bin"
      dest: "{{ ansible_env.HOME }}/.local"
      itself: true

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ ansible_env.XDG_CONFIG_HOME }}/systemd/user"
    - "{{ ansible_env.XDG_CONFIG_HOME }}/npm"

- name: Corrent npmrc config (for XDG cleanup)
  lineinfile:
    path: "{{ ansible_env.XDG_CONFIG_HOME }}/npm/npmrc"
    line: "{{ item }}"
    mode: "0644"
    create: true
  loop:
    - prefix={{ ansible_env.XDG_DATA_HOME }}/npm
    - cache={{ ansible_env.XDG_CACHE_HOME }}/npm
    - init-module={{ ansible_env.XDG_CONFIG_HOME }}/npm/config/npm-init.js

  # TODO: check if needed, seems like putting contents of user_env.sh into /etc/zsh/zshenv is enough (the followin task)
- name: load env vars for any login shell # lightdm reads this file
  become: true
  copy:
    src: user_env.sh
    dest: "{{ item }}"
    mode: preserve
  loop:
    - /etc/profile.d/user_env.sh
    - /etc/zsh/user_env.sh

- name: load env vars for zsh tty
  become: true
  blockinfile:
    path: /etc/zsh/zshenv ## for some reason zprofile is not loaded
    block: |
      env_file="/etc/zsh/user_env.sh"
      [ -f "$env_file" ] && . "$env_file"

- name: Copy encrypted files
  copy:
    src: "{{ lookup('env', 'XDG_DOTFILES_DIR') }}/{{ item.src }}"
    dest: "{{ ansible_env.XDG_DOTFILES_DIR }}/{{ item.dest }}"
    mode: preserve
  loop:
    - src: "dotconfig/zsh/zsh-local-enc"
      dest: "dotconfig/zsh/zsh-local"
    - src: "dotconfig/git/git-work-enc.conf"
      dest: "dotconfig/git/git-work.conf"
    - src: "dotconfig/git/git-personal-enc.conf"
      dest: "dotconfig/git/git-personal.conf"

- name: mimeapps.list
  vars:
    browser:
      "{{ (ansible_env.BROWSER == 'google-chrome-stable') |
      ternary('google-chrome', 'firefox') }}"
  lineinfile:
    path: "{{ ansible_env.XDG_CONFIG_HOME }}/mimeapps.list"
    line: "{{ item }}"
    mode: "0644"
    create: true
  loop:
    - "[Default Applications]"
    - application/javascript=nvim.desktop;
    - application/pdf=org.pwmt.zathura.desktop;
    - application/epub+zip=org.pwmt.zathura.desktop;
    - application/x-bittorrent=org.qbittorrent.qBittorrent.desktop;
    - application/x-shellscript=nvim.desktop;
    - application/x-troff-man=nvim.desktop;
    - text/plain=nvim.desktop;

    - audio/aac=mpv.desktop;
    - audio/flac=mpv.desktop;
    - audio/m4a=mpv.desktop;
    - audio/midi=mpv.desktop;
    - audio/mp3=mpv.desktop;
    - audio/mp4=mpv.desktop;
    - audio/mpeg=mpv.desktop;
    - audio/mpegurl=mpv.desktop;
    - audio/mpg=mpv.desktop;
    - audio/ogg=mpv.desktop;
    - audio/opus=mpv.desktop;
    - audio/wav=mpv.desktop;
    - audio/webm=mpv.desktop;

    - image/bmp=nsxiv.desktop;
    - image/gif=nsxiv.desktop;
    - image/jpeg=nsxiv.desktop;
    - image/jpg=nsxiv.desktop;
    - image/png=nsxiv.desktop;
    - image/svg+xml=nsxiv.desktop;
    - image/svg+xml-compressed=nsxiv.desktop;
    - image/tiff=nsxiv.desktop;
    - image/webp=nsxiv.desktop;
    - image/x-icon=nsxiv.desktop;
    - image/x-portable-pixmap=feh.desktop;
    - image/x-tga=nsxiv.desktop;
    - image/x-xbitmap=nsxiv.desktop;
    - image/x-xpixmap=nsxiv.desktop;

    - inode/directory=caja-folder-handler.desktop;

    - video/avi=mpv.desktop;
    - video/flv=mpv.desktop;
    - video/mkv=mpv.desktop;
    - video/mp4=mpv.desktop;
    - video/mp4v-es=mpv.desktop;
    - video/mpeg=mpv.desktop;
    - video/mpeg-system=mpv.desktop;
    - video/ogg=mpv.desktop;
    - video/quicktime=mpv.desktop;
    - video/webm=mpv.desktop;
    - video/x-matroska=mpv.desktop;

    - text/html={{ browser }}.desktop;
    - application/xhtml+xml={{ browser }}.desktop;
    - x-scheme-handler/about={{ browser }}.desktop;
    - x-scheme-handler/http={{ browser }}.desktop;
    - x-scheme-handler/https={{ browser }}.desktop;
    - x-scheme-handler/unknown={{ browser }}.desktop;
    - x-scheme-handler/freetube=freetube.desktop
