- name: Load package variables
  tags:
    - binary
  include_vars: vars/binary_packages.yml

- name: "{{ item }} | Install {{ item }}"
  become: true
  tags:
    - binary
  vars:
    pkg_name: "{{ binary_packages[item].name }}"
    url: "{{ binary_packages[item].url }}"
    version: "{{ binary_packages[item].version }}"
    checksum: "{{ binary_packages[item].checksum }}"
    check_version_cmd: "{{ binary_packages[item].get('check_version_cmd') }}"
    filename: "{{ url | urlsplit('path') | basename }}"
    is_deb_pkg:
      "{{ url | urlsplit('path') | basename | regex_search('\\.deb$') is not
      none }}"
    is_archive:
      "{{ url | urlsplit('path') | basename |
      regex_search('\\.(tar\\.gz|tgz|zip)$') is not none }}"
    is_binary:
      "{{ url | urlsplit('path') | basename | regex_search('^[^.]+$') is not
      none }}"
  block:
    - name: "{{ item }} | check if binary exists and get current version"
      shell: "{{ check_version_cmd }}"
      register: version_check
      changed_when: false # Command is just for checking, never marks as changed
      failed_when: false # Don't fail if binary doesn't exist yet
      check_mode: false # Always run version check even in check mode
      when: check_version_cmd

    - name: "{{ item }} | parse current version"
      set_fact:
        current_version:
          "{{ version_check is defined and version_check.stdout |
          default('none') }}"
      changed_when: false
      failed_when: false
      check_mode: false

    - name: "{{ item }} | download file"
      get_url:
        url: "{{ url }}"
        dest: "/tmp/{{ filename }}"
        checksum: "{{ checksum }}"
        mode: "0644"
      when: current_version is undefined or current_version != version

    - name: "{{ item }} | install from archive"
      when: is_archive and current_version != version
      block:
        - name: "{{ item }} | create tmp dir"
          file:
            path: /tmp/{{ pkg_name }}-{{ version }}
            state: directory
            mode: "0755"

        - name: "{{ item }} | extract archive to temp directory"
          unarchive:
            src: "/tmp/{{ filename }}"
            dest: /tmp/{{ pkg_name }}-{{ version }}
            remote_src: true
            mode: "0755"

        - name: "{{ item }} | find binary in extracted files"
          find:
            paths: /tmp/{{ pkg_name }}-{{ version }}
            patterns: "{{ pkg_name }}"
            recurse: true
            file_type: file
          register: found_binaries

        - name: "{{ item }} | install binary to destination"
          copy:
            src: "{{ found_binaries.files[0].path }}"
            dest: "/usr/local/bin/{{ pkg_name }}"
            mode: "0755"
            owner: root
            group: root
            remote_src: true

        - name: "{{ item }} | remove tmp dir"
          file:
            path: /tmp/{{ pkg_name }}-{{ version }}
            state: absent

    - name: "{{ item }} | copy binary to destination"
      copy:
        src: "/tmp/{{ filename }}"
        dest: "/usr/local/bin/{{ pkg_name }}"
        mode: "0755"
        owner: root
        group: root
        remote_src: true
      when: is_binary and current_version != version

    - name: "{{ item }} | install debian package"
      when: is_deb_pkg and current_version != version
      apt:
        deb: /tmp/{{ filename }}

    - name: "{{ item }} | verify installed version"
      shell: "{{ check_version_cmd }}"
      register: verify_version
      failed_when: >
        verify_version.rc != 0 or verify_version.stdout != version
      changed_when: false
      check_mode: false
      when: check_version_cmd and current_version != version
